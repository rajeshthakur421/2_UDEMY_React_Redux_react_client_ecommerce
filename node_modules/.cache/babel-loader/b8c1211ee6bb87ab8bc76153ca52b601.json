{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/react-redux/client/src/pages/auth/Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { auth, googleAuthProvider } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"antd\";\nimport { MailOutlined, GoogleOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createOrUpdateUser } from \"../../functions/auth\";\n\nconst Login = ({\n  history\n}) => {\n  const [email, setEmail] = useState(\"gqlreactnode@gmail.com\");\n  const [password, setPassword] = useState(\"gggggg\");\n  const [loading, setLoading] = useState(false);\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    let intended = history.location.state;\n\n    if (intended) {\n      return;\n    } else {\n      if (user && user.token) history.push(\"/\");\n    }\n  }, [user, history]);\n  let dispatch = useDispatch();\n\n  const roleBasedRedirect = res => {\n    // check if intended\n    let intended = history.location.state;\n\n    if (intended) {\n      history.push(intended.from);\n    } else {\n      if (res.data.role === \"admin\") {\n        history.push(\"/admin/dashboard\");\n      } else {\n        history.push(\"/user/history\");\n      }\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true); // console.table(email, password);\n\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password);\n      console.log(\"\", result);\n      const {\n        user\n      } = result;\n      const idTokenResult = await user.getIdTokenResult();\n      createOrUpdateUser(idTokenResult.token).then(res => {\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: {\n            name: res.data.name,\n            email: res.data.email,\n            token: idTokenResult.token,\n            role: res.data.role,\n            _id: res.data._id\n          }\n        });\n        roleBasedRedirect(res);\n      }).catch(err => console.log(err)); // history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const googleLogin = async () => {\n    auth.signInWithPopup(googleAuthProvider).then(async result => {\n      const {\n        user\n      } = result;\n      const idTokenResult = await user.getIdTokenResult();\n      createOrUpdateUser(idTokenResult.token).then(res => {\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: {\n            name: res.data.name,\n            email: res.data.email,\n            token: idTokenResult.token,\n            role: res.data.role,\n            _id: res.data._id\n          }\n        });\n        roleBasedRedirect(res);\n      }).catch(err => console.log(err)); // history.push(\"/\");\n    }).catch(err => {\n      console.log(err);\n      toast.error(err.message);\n    });\n  };\n\n  const loginForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Your email\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Your password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    type: \"primary\",\n    className: \"mb-3\",\n    block: true,\n    shape: \"round\",\n    icon: /*#__PURE__*/React.createElement(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }),\n    size: \"large\",\n    disabled: !email || password.length < 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"Login with Email/Password\"));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Login\"), loginForm(), /*#__PURE__*/React.createElement(Button, {\n    onClick: googleLogin,\n    type: \"danger\",\n    className: \"mb-3\",\n    block: true,\n    shape: \"round\",\n    icon: /*#__PURE__*/React.createElement(GoogleOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }),\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Login with Google\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/forgot/password\",\n    className: \"float-right text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, \"Forgot Password\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/home/rudransh/public_html/react-redux/client/src/pages/auth/Login.js"],"names":["React","useState","useEffect","auth","googleAuthProvider","toast","Button","MailOutlined","GoogleOutlined","useDispatch","useSelector","Link","createOrUpdateUser","Login","history","email","setEmail","password","setPassword","loading","setLoading","user","state","intended","location","token","push","dispatch","roleBasedRedirect","res","from","data","role","handleSubmit","e","preventDefault","result","signInWithEmailAndPassword","console","log","idTokenResult","getIdTokenResult","then","type","payload","name","_id","catch","err","error","message","googleLogin","signInWithPopup","loginForm","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth, googleAuthProvider } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { Button } from \"antd\";\nimport { MailOutlined, GoogleOutlined } from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { createOrUpdateUser } from \"../../functions/auth\";\n\nconst Login = ({ history }) => {\n  const [email, setEmail] = useState(\"gqlreactnode@gmail.com\");\n  const [password, setPassword] = useState(\"gggggg\");\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    let intended = history.location.state;\n    if (intended) {\n      return;\n    } else {\n      if (user && user.token) history.push(\"/\");\n    }\n  }, [user, history]);\n\n  let dispatch = useDispatch();\n\n  const roleBasedRedirect = (res) => {\n    // check if intended\n    let intended = history.location.state;\n    if (intended) {\n      history.push(intended.from);\n    } else {\n      if (res.data.role === \"admin\") {\n        history.push(\"/admin/dashboard\");\n      } else {\n        history.push(\"/user/history\");\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    // console.table(email, password);\n    try {\n      const result = await auth.signInWithEmailAndPassword(email, password);\n      console.log(\"\",result);\n      const { user } = result;\n      const idTokenResult = await user.getIdTokenResult();\n\n      createOrUpdateUser(idTokenResult.token)\n        .then((res) => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id,\n            },\n          });\n          roleBasedRedirect(res);\n        })\n        .catch((err) => console.log(err));\n\n      // history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const googleLogin = async () => {\n    auth\n      .signInWithPopup(googleAuthProvider)\n      .then(async (result) => {\n        const { user } = result;\n        const idTokenResult = await user.getIdTokenResult();\n        createOrUpdateUser(idTokenResult.token)\n          .then((res) => {\n            dispatch({\n              type: \"LOGGED_IN_USER\",\n              payload: {\n                name: res.data.name,\n                email: res.data.email,\n                token: idTokenResult.token,\n                role: res.data.role,\n                _id: res.data._id,\n              },\n            });\n            roleBasedRedirect(res);\n          })\n          .catch((err) => console.log(err));\n        // history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n        toast.error(err.message);\n      });\n  };\n\n  const loginForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Your email\"\n          autoFocus\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Your password\"\n        />\n      </div>\n\n      <br />\n      <Button\n        onClick={handleSubmit}\n        type=\"primary\"\n        className=\"mb-3\"\n        block\n        shape=\"round\"\n        icon={<MailOutlined />}\n        size=\"large\"\n        disabled={!email || password.length < 6}\n      >\n        Login with Email/Password\n      </Button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          {loading ? (\n            <h4 className=\"text-danger\">Loading...</h4>\n          ) : (\n            <h4>Login</h4>\n          )}\n          {loginForm()}\n\n          <Button\n            onClick={googleLogin}\n            type=\"danger\"\n            className=\"mb-3\"\n            block\n            shape=\"round\"\n            icon={<GoogleOutlined />}\n            size=\"large\"\n          >\n            Login with Google\n          </Button>\n\n          <Link to=\"/forgot/password\" className=\"float-right text-danger\">\n            Forgot Password\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}