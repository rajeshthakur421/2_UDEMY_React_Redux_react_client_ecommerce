{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/react-redux/client/src/components/routes/AdminRoute.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\nimport { currentAdmin } from \"../../functions/auth\";\n\nconst AdminRoute = ({\n  children,\n  ...rest\n}) => {\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [ok, setOk] = useState(false);\n  useEffect(() => {\n    if (user && user.token) {\n      currentAdmin(user.token).then(res => {\n        console.log(\"CURRENT ADMIN RES\", res);\n        setOk(true);\n      }).catch(err => {\n        console.log(\"ADMIN ROUTE ERR\", err);\n        setOk(false);\n      });\n    }\n  }, [user]);\n  return ok ? /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(LoadingToRedirect, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 37\n    }\n  });\n};\n\nexport default AdminRoute;","map":{"version":3,"sources":["/home/rudransh/public_html/react-redux/client/src/components/routes/AdminRoute.js"],"names":["React","useEffect","useState","Route","useSelector","LoadingToRedirect","currentAdmin","AdminRoute","children","rest","user","state","ok","setOk","token","then","res","console","log","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAWN,WAAW,CAAEO,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;AACA,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,KAAD,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,IAAI,IAAIA,IAAI,CAACI,KAAjB,EAAwB;AACtBR,MAAAA,YAAY,CAACI,IAAI,CAACI,KAAN,CAAZ,CACGC,IADH,CACSC,GAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,GAAjC;AACAH,QAAAA,KAAK,CAAC,IAAD,CAAL;AACD,OAJH,EAKGM,KALH,CAKUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,GAA/B;AACAP,QAAAA,KAAK,CAAC,KAAD,CAAL;AACD,OARH;AASD;AACF,GAZQ,EAYN,CAACH,IAAD,CAZM,CAAT;AAcA,SAAOE,EAAE,gBAAG,oBAAC,KAAD,oBAAWH,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH,gBAAyB,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC;AACD,CAnBD;;AAqBA,eAAeF,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\nimport { currentAdmin } from \"../../functions/auth\";\n\nconst AdminRoute = ({ children, ...rest }) => {\n  const { user } = useSelector((state) => ({ ...state }));\n  const [ok, setOk] = useState(false);\n\n  useEffect(() => {\n    if (user && user.token) {\n      currentAdmin(user.token)\n        .then((res) => {\n          console.log(\"CURRENT ADMIN RES\", res);\n          setOk(true);\n        })\n        .catch((err) => {\n          console.log(\"ADMIN ROUTE ERR\", err);\n          setOk(false);\n        });\n    }\n  }, [user]);\n\n  return ok ? <Route {...rest} /> : <LoadingToRedirect />;\n};\n\nexport default AdminRoute;\n"]},"metadata":{},"sourceType":"module"}