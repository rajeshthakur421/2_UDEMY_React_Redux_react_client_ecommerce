{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/react-redux/client/src/pages/auth/RegisterComplete.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch } from \"react-redux\";\nimport { createOrUpdateUser } from \"../../functions/auth\";\n\nconst RegisterComplete = ({\n  history\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // const { user } = useSelector((state) => ({ ...state }));\n\n  let dispatch = useDispatch();\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\")); // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, [history]);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // validation\n\n    if (!email || !password) {\n      toast.error(\"Email and password is required\");\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error(\"Password must be at least 6 characters long\");\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(email, window.location.href); //   console.log(\"RESULT\", result);\n\n      if (result.user.emailVerified) {\n        // remove user email fom local storage\n        window.localStorage.removeItem(\"emailForRegistration\"); // get user id token\n\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult(); // redux store\n\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\n        createOrUpdateUser(idTokenResult.token).then(res => {\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: {\n              name: res.data.name,\n              email: res.data.email,\n              token: idTokenResult.token,\n              role: res.data.role,\n              _id: res.data._id\n            }\n          });\n        }).catch(err => console.log(err)); // redirect\n\n        history.push(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    className: \"form-control\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-raised\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Complete Registration\"));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 offset-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Register Complete\"), completeRegistrationForm())));\n};\n\nexport default RegisterComplete;","map":{"version":3,"sources":["/home/rudransh/public_html/react-redux/client/src/pages/auth/RegisterComplete.js"],"names":["React","useState","useEffect","auth","toast","useDispatch","createOrUpdateUser","RegisterComplete","history","email","setEmail","password","setPassword","dispatch","window","localStorage","getItem","handleSubmit","e","preventDefault","error","length","result","signInWithEmailLink","location","href","user","emailVerified","removeItem","currentUser","updatePassword","idTokenResult","getIdTokenResult","console","log","token","then","res","type","payload","name","data","role","_id","catch","err","push","message","completeRegistrationForm","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,sBAAnC;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CAFwC,CAIxC;;AACA,MAAIY,QAAQ,GAAGR,WAAW,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACI,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,sBAA5B,CAAD,CAAR,CADc,CAEd;AACA;AACD,GAJQ,EAIN,CAACR,OAAD,CAJM,CAAT;;AAMA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF,GADgC,CAEhC;;AACA,QAAI,CAACV,KAAD,IAAU,CAACE,QAAf,EAAyB;AACvBP,MAAAA,KAAK,CAACgB,KAAN,CAAY,gCAAZ;AACA;AACD;;AAED,QAAIT,QAAQ,CAACU,MAAT,GAAkB,CAAtB,EAAyB;AACvBjB,MAAAA,KAAK,CAACgB,KAAN,CAAY,6CAAZ;AACA;AACD;;AAED,QAAI;AACF,YAAME,MAAM,GAAG,MAAMnB,IAAI,CAACoB,mBAAL,CACnBd,KADmB,EAEnBK,MAAM,CAACU,QAAP,CAAgBC,IAFG,CAArB,CADE,CAKF;;AACA,UAAIH,MAAM,CAACI,IAAP,CAAYC,aAAhB,EAA+B;AAC7B;AACAb,QAAAA,MAAM,CAACC,YAAP,CAAoBa,UAApB,CAA+B,sBAA/B,EAF6B,CAG7B;;AACA,YAAIF,IAAI,GAAGvB,IAAI,CAAC0B,WAAhB;AACA,cAAMH,IAAI,CAACI,cAAL,CAAoBnB,QAApB,CAAN;AACA,cAAMoB,aAAa,GAAG,MAAML,IAAI,CAACM,gBAAL,EAA5B,CAN6B,CAO7B;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,IAApB,EAA0B,eAA1B,EAA2CK,aAA3C;AAEAzB,QAAAA,kBAAkB,CAACyB,aAAa,CAACI,KAAf,CAAlB,CACGC,IADH,CACSC,GAAD,IAAS;AACbxB,UAAAA,QAAQ,CAAC;AACPyB,YAAAA,IAAI,EAAE,gBADC;AAEPC,YAAAA,OAAO,EAAE;AACPC,cAAAA,IAAI,EAAEH,GAAG,CAACI,IAAJ,CAASD,IADR;AAEP/B,cAAAA,KAAK,EAAE4B,GAAG,CAACI,IAAJ,CAAShC,KAFT;AAGP0B,cAAAA,KAAK,EAAEJ,aAAa,CAACI,KAHd;AAIPO,cAAAA,IAAI,EAAEL,GAAG,CAACI,IAAJ,CAASC,IAJR;AAKPC,cAAAA,GAAG,EAAEN,GAAG,CAACI,IAAJ,CAASE;AALP;AAFF,WAAD,CAAR;AAUD,SAZH,EAaGC,KAbH,CAaUC,GAAD,IAASZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CAblB,EAV6B,CAyB7B;;AACArC,QAAAA,OAAO,CAACsC,IAAR,CAAa,GAAb;AACD;AACF,KAlCD,CAkCE,OAAO1B,KAAP,EAAc;AACda,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAhB,MAAAA,KAAK,CAACgB,KAAN,CAAYA,KAAK,CAAC2B,OAAlB;AACD;AACF,GAnDD;;AAqDA,QAAMC,wBAAwB,GAAG,mBAC/B;AAAM,IAAA,QAAQ,EAAE/B,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAC,cAA9B;AAA6C,IAAA,KAAK,EAAER,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAEE,QAHT;AAIE,IAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAAC+B,MAAF,CAASC,KAAV,CAJ9B;AAKE,IAAA,WAAW,EAAC,UALd;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAZF,CADF;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEGF,wBAAwB,EAF3B,CADF,CADF,CADF;AAUD,CA/FD;;AAiGA,eAAezC,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useDispatch } from \"react-redux\";\nimport { createOrUpdateUser } from \"../../functions/auth\";\n\nconst RegisterComplete = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  // const { user } = useSelector((state) => ({ ...state }));\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\n    // console.log(window.location.href);\n    // console.log(window.localStorage.getItem(\"emailForRegistration\"));\n  }, [history]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // validation\n    if (!email || !password) {\n      toast.error(\"Email and password is required\");\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error(\"Password must be at least 6 characters long\");\n      return;\n    }\n\n    try {\n      const result = await auth.signInWithEmailLink(\n        email,\n        window.location.href\n      );\n      //   console.log(\"RESULT\", result);\n      if (result.user.emailVerified) {\n        // remove user email fom local storage\n        window.localStorage.removeItem(\"emailForRegistration\");\n        // get user id token\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n        const idTokenResult = await user.getIdTokenResult();\n        // redux store\n        console.log(\"user\", user, \"idTokenResult\", idTokenResult);\n\n        createOrUpdateUser(idTokenResult.token)\n          .then((res) => {\n            dispatch({\n              type: \"LOGGED_IN_USER\",\n              payload: {\n                name: res.data.name,\n                email: res.data.email,\n                token: idTokenResult.token,\n                role: res.data.role,\n                _id: res.data._id,\n              },\n            });\n          })\n          .catch((err) => console.log(err));\n\n        // redirect\n        history.push(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(error.message);\n    }\n  };\n\n  const completeRegistrationForm = () => (\n    <form onSubmit={handleSubmit}>\n      <input type=\"email\" className=\"form-control\" value={email} />\n\n      <input\n        type=\"password\"\n        className=\"form-control\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        placeholder=\"Password\"\n        autoFocus\n      />\n      <br />\n      <button type=\"submit\" className=\"btn btn-raised\">\n        Complete Registration\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3\">\n          <h4>Register Complete</h4>\n          {completeRegistrationForm()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterComplete;\n"]},"metadata":{},"sourceType":"module"}