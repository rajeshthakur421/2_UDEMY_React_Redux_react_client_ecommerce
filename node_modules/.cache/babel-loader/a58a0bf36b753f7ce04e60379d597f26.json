{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/react-redux/client/src/pages/auth/ForgotPassword.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\n\nconst ForgotPassword = ({\n  history\n}) => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    if (user && user.token) history.push(\"/\");\n  }, [user, history]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n      handleCodeInApp: true\n    };\n    await auth.sendPasswordResetEmail(email, config).then(() => {\n      setEmail(\"\");\n      setLoading(false);\n      toast.success(\"Check your email for password reset link\");\n    }).catch(error => {\n      setLoading(false);\n      toast.error(error.message);\n      console.log(\"ERROR MSG IN FORGOT PASSWORD\", error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container col-md-6 offset-md-3 p-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    className: \"form-control\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Type your email\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-raised\",\n    disabled: !email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["/home/rudransh/public_html/react-redux/client/src/pages/auth/ForgotPassword.js"],"names":["React","useState","useEffect","auth","toast","useSelector","ForgotPassword","history","email","setEmail","loading","setLoading","user","state","token","push","handleSubmit","e","preventDefault","config","url","process","env","REACT_APP_FORGOT_PASSWORD_REDIRECT","handleCodeInApp","sendPasswordResetEmail","then","success","catch","error","message","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAWP,WAAW,CAAEQ,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,IAAI,IAAIA,IAAI,CAACE,KAAjB,EAAwBP,OAAO,CAACQ,IAAR,CAAa,GAAb;AACzB,GAFQ,EAEN,CAACH,IAAD,EAAOL,OAAP,CAFM,CAAT;;AAIA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMQ,MAAM,GAAG;AACbC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,kCADJ;AAEbC,MAAAA,eAAe,EAAE;AAFJ,KAAf;AAKA,UAAMrB,IAAI,CACPsB,sBADG,CACoBjB,KADpB,EAC2BW,MAD3B,EAEHO,IAFG,CAEE,MAAM;AACVjB,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,MAAAA,KAAK,CAACuB,OAAN,CAAc,0CAAd;AACD,KANG,EAOHC,KAPG,CAOIC,KAAD,IAAW;AAChBlB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,MAAAA,KAAK,CAACyB,KAAN,CAAYA,KAAK,CAACC,OAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CH,KAA5C;AACD,KAXG,CAAN;AAYD,GArBD;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,OAAO,gBACN;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADM,gBAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,eAOE;AAAM,IAAA,QAAQ,EAAEM,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAER,KAHT;AAIE,IAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV,CAJ3B;AAKE,IAAA,WAAW,EAAC,iBALd;AAME,IAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,eAUE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAmC,IAAA,QAAQ,EAAE,CAAC1B,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CAPF,CADF;AAwBD,CAzDD;;AA2DA,eAAeF,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\n\nconst ForgotPassword = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    if (user && user.token) history.push(\"/\");\n  }, [user, history]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n      handleCodeInApp: true,\n    };\n\n    await auth\n      .sendPasswordResetEmail(email, config)\n      .then(() => {\n        setEmail(\"\");\n        setLoading(false);\n        toast.success(\"Check your email for password reset link\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        toast.error(error.message);\n        console.log(\"ERROR MSG IN FORGOT PASSWORD\", error);\n      });\n  };\n\n  return (\n    <div className=\"container col-md-6 offset-md-3 p-5\">\n      {loading ? (\n        <h4 className=\"text-danger\">Loading</h4>\n      ) : (\n        <h4>Forgot Password</h4>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Type your email\"\n          autoFocus\n        />\n        <br />\n        <button className=\"btn btn-raised\" disabled={!email}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"]},"metadata":{},"sourceType":"module"}