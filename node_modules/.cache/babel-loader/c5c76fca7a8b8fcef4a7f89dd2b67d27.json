{"ast":null,"code":"var _jsxFileName = \"/home/rudransh/public_html/react-redux/client/src/components/forms/FileUpload.js\";\nimport React from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Avatar, Badge } from \"antd\";\n\nconst FileUpload = ({\n  values,\n  setValues,\n  setLoading\n}) => {\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n\n  const fileUploadAndResize = e => {\n    // console.log(e.target.files);\n    // resize\n    let files = e.target.files; // 3\n\n    let allUploadedFiles = values.images;\n\n    if (files) {\n      setLoading(true);\n\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(files[i], 720, 720, \"JPEG\", 100, 0, uri => {\n          // console.log(uri);\n          axios.post(`${process.env.REACT_APP_API}/uploadimages`, {\n            image: uri\n          }, {\n            headers: {\n              authtoken: user ? user.token : \"\"\n            }\n          }).then(res => {\n            console.log(\"IMAGE UPLOAD RES DATA\", res);\n            setLoading(false);\n            allUploadedFiles.push(res.data);\n            setValues({ ...values,\n              images: allUploadedFiles\n            });\n          }).catch(err => {\n            setLoading(false);\n            console.log(\"CLOUDINARY UPLOAD ERR\", err);\n          });\n        }, \"base64\");\n      }\n    } // send back to server to upload to cloudinary\n    // set url to images[] in the parent component state - ProductCreate\n\n  };\n\n  const handleImageRemove = public_id => {\n    setLoading(true); // console.log(\"remove image\", public_id);\n\n    axios.post(`${process.env.REACT_APP_API}/removeimage`, {\n      public_id\n    }, {\n      headers: {\n        authtoken: user ? user.token : \"\"\n      }\n    }).then(res => {\n      setLoading(false);\n      const {\n        images\n      } = values;\n      let filteredImages = images.filter(item => {\n        return item.public_id !== public_id;\n      });\n      setValues({ ...values,\n        images: filteredImages\n      });\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, values.images && values.images.map(image => /*#__PURE__*/React.createElement(Badge, {\n    count: \"X\",\n    key: image.public_id,\n    onClick: () => handleImageRemove(image.public_id),\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    src: image.url,\n    size: 100,\n    shape: \"square\",\n    className: \"ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn btn-primary btn-raised mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Choose File\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    accept: \"images/*\",\n    onChange: fileUploadAndResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/home/rudransh/public_html/react-redux/client/src/components/forms/FileUpload.js"],"names":["React","Resizer","axios","useSelector","Avatar","Badge","FileUpload","values","setValues","setLoading","user","state","fileUploadAndResize","e","files","target","allUploadedFiles","images","i","length","imageFileResizer","uri","post","process","env","REACT_APP_API","image","headers","authtoken","token","then","res","console","log","push","data","catch","err","handleImageRemove","public_id","filteredImages","filter","item","map","cursor","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Avatar, Badge } from \"antd\";\n\nconst FileUpload = ({ values, setValues, setLoading }) => {\n  const { user } = useSelector((state) => ({ ...state }));\n\n  const fileUploadAndResize = (e) => {\n    // console.log(e.target.files);\n    // resize\n    let files = e.target.files; // 3\n    let allUploadedFiles = values.images;\n\n    if (files) {\n      setLoading(true);\n      for (let i = 0; i < files.length; i++) {\n        Resizer.imageFileResizer(\n          files[i],\n          720,\n          720,\n          \"JPEG\",\n          100,\n          0,\n          (uri) => {\n            // console.log(uri);\n            axios\n              .post(\n                `${process.env.REACT_APP_API}/uploadimages`,\n                { image: uri },\n                {\n                  headers: {\n                    authtoken: user ? user.token : \"\",\n                  },\n                }\n              )\n              .then((res) => {\n                console.log(\"IMAGE UPLOAD RES DATA\", res);\n                setLoading(false);\n                allUploadedFiles.push(res.data);\n\n                setValues({ ...values, images: allUploadedFiles });\n              })\n              .catch((err) => {\n                setLoading(false);\n                console.log(\"CLOUDINARY UPLOAD ERR\", err);\n              });\n          },\n          \"base64\"\n        );\n      }\n    }\n    // send back to server to upload to cloudinary\n    // set url to images[] in the parent component state - ProductCreate\n  };\n\n  const handleImageRemove = (public_id) => {\n    setLoading(true);\n    // console.log(\"remove image\", public_id);\n    axios\n      .post(\n        `${process.env.REACT_APP_API}/removeimage`,\n        { public_id },\n        {\n          headers: {\n            authtoken: user ? user.token : \"\",\n          },\n        }\n      )\n      .then((res) => {\n        setLoading(false);\n        const { images } = values;\n        let filteredImages = images.filter((item) => {\n          return item.public_id !== public_id;\n        });\n        setValues({ ...values, images: filteredImages });\n      })\n      .catch((err) => {\n        console.log(err);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        {values.images &&\n          values.images.map((image) => (\n            <Badge\n              count=\"X\"\n              key={image.public_id}\n              onClick={() => handleImageRemove(image.public_id)}\n              style={{ cursor: \"pointer\" }}\n            >\n              <Avatar\n                src={image.url}\n                size={100}\n                shape=\"square\"\n                className=\"ml-3\"\n              />\n            </Badge>\n          ))}\n      </div>\n      <div className=\"row\">\n        <label className=\"btn btn-primary btn-raised mt-3\">\n          Choose File\n          <input\n            type=\"file\"\n            multiple\n            hidden\n            accept=\"images/*\"\n            onChange={fileUploadAndResize}\n          />\n        </label>\n      </div>\n    </>\n  );\n};\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}